import java.util.*;

public class PrimConectividad {
    public static void main(String[] args) {
        int[][] grafo = {
            {0, 2, 0, 6, 0},
            {2, 0, 3, 8, 5},
            {0, 3, 0, 0, 7},
            {6, 8, 0, 0, 9},
            {0, 5, 7, 9, 0}
        };
        
        prim(grafo);
    }
    
    static void prim(int[][] g) {
        int n = g.length;
        boolean[] vis = new boolean[n];
        int[] padre = new int[n];
        int[] key = new int[n];
        Arrays.fill(key, Integer.MAX_VALUE);
        key[0] = 0;
        padre[0] = -1;
        
        for (int i = 0; i < n; i++) {
            int u = -1;
            for (int j = 0; j < n; j++)
                if (!vis[j] && (u == -1 || key[j] < key[u])) u = j;
            
            if (key[u] == Integer.MAX_VALUE) {
                System.out.println("El grafo no tiene árbol de expansión mínima");
                return;
            }
            
            vis[u] = true;
            
            for (int v = 0; v < n; v++)
                if (g[u][v] > 0 && !vis[v] && g[u][v] < key[v]) {
                    padre[v] = u;
                    key[v] = g[u][v];
                }
        }
        
        
        System.out.println("Aristas del MST:");
        int costoTotal = 0;
        for (int i = 1; i < n; i++) {
            System.out.println(padre[i] + " - " + i + " : " + g[i][padre[i]]);
            costoTotal += g[i][padre[i]];
        }
        System.out.println("Costo total: " + costoTotal);
    }
}
